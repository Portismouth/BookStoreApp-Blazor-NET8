@page "/books/"
@inject IBooksService _booksService
@inject IJSRuntime js

<h3>Books</h3>

@if (response.Success == false)
{
    <div class="alert alert-danger">
        <h4>@response.Message</h4>
    </div>
}
else
{
    @if (Model == null)
    {
        <div class="alert alert-info">
            <h4>Loading</h4>
        </div>
    }
    else
    {
        <AuthorizeView Roles="Administrator">
            <a class="btn btn-dark" href="/books/create"><span class="oi oi-plus" aria-hidden="true"></span> Create </a>
        </AuthorizeView>
        <br />
        <table class="table table-responsive">
            <thead>
                <tr>
                    <th></th>
                    <th>Title</th>
                    <th>Price</th>
                    <th>Author Name</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var book in Model)
                {
                    <tr>
                        <td>
                            <img 
                                src="@book.Image" 
                                class="card-img-top" 
                                width="100px" 
                                height="100px" 
                                alt="@book.Title">
                        </td>
                        <td>@book.Title</td>
                        <td>@String.Format("{0:C}", book.Price)</td>
                        <td><a class="btn btn-link" href="/authors/details/@book.AuthorId">@book.AuthorName </a></td>
                        <td>
                            <a class="btn btn-primary" href="/books/details/@book.Id"> 
                                <span class="oi oi-book" aria-hidden="true"></span> Details 
                            </a>
                            <AuthorizeView Roles="Administrator">
                                <a class="btn btn-warning" href="/books/update/@book.Id"> <span class="oi oi-pencil"
                                        aria-hidden="true"></span> Edit </a>
                                <button class="btn btn-danger" @onclick=@(() => Delete(@book.Id))> <span class="oi oi-delete"
                                        aria-hidden="true"></span> Delete </button>
                            </AuthorizeView>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
}

@code {
    private List<BookReadOnlyDto> Model;
    private Response<List<BookReadOnlyDto>> response = new Response<List<BookReadOnlyDto>> { Success = true };
    protected override async Task OnInitializedAsync()
    {
        response = await _booksService.Get();
        if (response.Success)
        {
            Model = response.Data;
        }
    }

    private async Task Delete(int bookId)
    {  
        var book = Model.First(a => a.Id == bookId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Are you sure you want to delete {book.Title}?");
        if (confirm)
        {    
            var response = await _booksService.Delete(bookId);
            if (response.Success)
            {
                await OnInitializedAsync();
            }
        }
    }
}
